<?php

/**
 * Implementation of hook_views_api().
 */
function commons_follow_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commons_follow') . '/includes/views',
  );
}

/**
* Returns a list of Commons Follow Flag objects.
*/
function commons_follow_get_flags() {
  $flags = flag_get_flags();
  foreach ($flags as $key => $flag) {
    if (substr($key, 0, 14) != 'commons_follow') {
      unset($flags[$key]);
    }
  }
  return $flags;
}

/**
* Returns an array of Commons Follow flags keyed on the numeric flag ID.
*/
function commons_follow_get_flag_ids() {
  $flag_ids = array();
  $flags = commons_follow_get_flags();
  foreach ($flags as $key => $flag) {
    $flag_ids[$flag->fid] = $key;
  }
  return $flag_ids;
}

/**
* Returns a single flag ID based on a flag machine name.
*/
function commons_follow_get_flag_id($name) {
  $flag = flag_get_flag($name);
  $return = $flag->fid;
  return $flag->fid;
}
/**
 * Get a list of all content that a user is following.
 * @return
 *  An array keyed on the flag name with values corresponding to the IDs
 *  of the flagged entities.
 */
function commons_follow_get_followed_content($account = array()) {
  if (empty($account)) {
    global $user;
    $account = $user;
  }
  $results = array();
  $flag_ids = commons_follow_get_flag_ids();
  // Get a list of everything that the user is following.
  $result = db_query("SELECT fid, content_id FROM {flag_content} WHERE fid IN (:fids) AND uid = :uid", array(':fids' => array_keys($flag_ids), ':uid' => $account->uid));
  foreach ($result as $this_result) {
    $results[$flag_ids[$this_result->fid]][] = $this_result->content_id;
  }

  return $results;
}

/**
* Find a list of message IDs that correspond to events that the current user
* is following.
*/
function commons_follow_get_followed_message_ids($account = NULL) {
  $followed_mids = array();
  // Allow the module with this flag namespace to return a list of
  // followed MIDs.
  $followed_content = commons_follow_get_followed_content($account);
  $followed_mids = array(-1);
  foreach ($followed_content as $key => $content) {
    $function = $key . '_commons_follow_get_message_ids';
    if (function_exists($function)) {
      $function($followed_mids, $followed_content);  
    }    
  }
  return $followed_mids;
}

function commons_follow_get_following_uids(&$following_uids = array(), $message) {
  $following_uids = array();
  foreach (module_implements('commons_follow_get_following_uids') as $module) {
    $function = $module . '_commons_follow_get_following_uids';
    $function($following_uids, $message);
  }
  //Todo: Somebody probably wants to drupal_alter() this.
}
